<% title @strategy.name %>
<div class="gridRowSpaceBetween">
  <%= react_component('StoryDate', props: {
    date: TimeAgo.created_or_edited(@strategy)
  }) %>
  <% if !@strategy.published? %>
    <%= react_component('StoryDraft', props: {
      draft: !@strategy.published? ?  t('draft') : nil
    }) %>
  <% end %>
</div>
<div class="smaller_margin_top">
  <%= react_component('StoryCategories', props: {
    categories: @strategy.category.map{ |item| Category.find(item).name }
  }) %>
</div>

<% if @strategy.description.present? %>
  <div class="small_margin_top">
    <%= sanitize(@strategy.description) %>
  </div>
<% end %>

<% if @strategy.user_id == current_user.id %>
  <div class="gridItemBoxDark small_margin_top">
    <div class="gridRowSpaceBetween">
      <div class="gridRowSpaceBetween">
        <div class="smaller_margin_right"><%= t('common.actions.plural') %>:</div>
        <%= react_component('StoryActions', props: {
          dark: true,
          actions: {
            edit: {
              link: edit_strategy_path(@strategy),
              name: t('common.actions.edit')
            },
            delete: {
              name: t('common.actions.delete'),
              link: url_for(@strategy),
              dataMethod: 'delete',
              dataConfirm:  t('common.actions.confirm')
            },
            viewers: get_viewer_list(@strategy.viewers, nil)
          }
        }) %>
      </div>
      <%= print_reminders(@strategy) %>
    </div>
  </div>
<% end %>


<%= render partial: '/shared/comments', locals: { data: @strategy, comments: @comments, comment: @comment, no_hide_page: @no_hide_page, commentable_type: 'strategy' } %>

<%= render partial: '/tag_usage/index', locals: { data: @strategy.id, data_type: 'strategy', user_id: @strategy.user_id } %>
