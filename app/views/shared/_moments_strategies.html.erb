<% if local_assigns[:data_type] == 'moment' || local_assigns[:data_type] == 'moment_tag_usage' %>
  <div class="gridTwoItemBoxLight">
    <%= react_component('Story', props: {
      name: local_assigns[:item].name,
      link: url_for(local_assigns[:item]),
      date: TimeAgo.created_or_edited(local_assigns[:item]),
      actions: {
        edit: local_assigns[:item].user_id == current_user.id ? edit_moment_path(local_assigns[:item]) : nil,
        viewers: local_assigns[:item].user_id == current_user.id ? get_viewer_list(local_assigns[:item].viewers, nil) : nil,
        delete: local_assigns[:item].user_id == current_user.id ? t('common.actions.confirm') : nil
      },
      draft: !local_assigns[:item].published? ?  t('draft') : nil,
      categories: local_assigns[:item].category.map{ |item| Category.find(item).name },
      moods: local_assigns[:item].mood.map{ |item| Mood.find(item).name }
    }) %>
  </div>
<% elsif local_assigns[:data_type] == 'strategy' || local_assigns[:data_type] == 'strategy_tag_usage' %>
  <div class="gridTwoItemBoxLight">
    <%= react_component('Story', props: {
      name: local_assigns[:item].name,
      link: url_for(local_assigns[:item]),
      date: TimeAgo.created_or_edited(local_assigns[:item]),
      actions: {
        edit: local_assigns[:item].user_id == current_user.id ? edit_strategy_path(local_assigns[:item]) : nil,
        viewers: local_assigns[:item].user_id == current_user.id ? get_viewer_list(local_assigns[:item].viewers, nil) : nil,
        delete: local_assigns[:item].user_id == current_user.id ? t('common.actions.confirm') : nil
      },
      draft: !local_assigns[:item].published? ?  t('draft') : nil,
      categories: local_assigns[:item].category.map{ |item| Category.find(item).name },
    }) %>
  </div>
<% end %>
